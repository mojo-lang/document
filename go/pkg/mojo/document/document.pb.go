// Code generated by mojo. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: mojo/document/document.proto

package document

import (
	core "github.com/mojo-lang/core/go/pkg/mojo/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAttribute_NumberStyle int32

const (
	ListAttribute_NUMBER_STYLE_UNSPECIFIED ListAttribute_NumberStyle = 0
	ListAttribute_NUMBER_STYLE_EXAMPLE     ListAttribute_NumberStyle = 1
	ListAttribute_NUMBER_STYLE_DECIMAL     ListAttribute_NumberStyle = 2
	ListAttribute_NUMBER_STYLE_LOWER_ROMAN ListAttribute_NumberStyle = 3
	ListAttribute_NUMBER_STYLE_UPPER_ROMAN ListAttribute_NumberStyle = 4
	ListAttribute_NUMBER_STYLE_LOWER_ALPHA ListAttribute_NumberStyle = 5
	ListAttribute_NUMBER_STYLE_UPPER_ALPHA ListAttribute_NumberStyle = 6
)

// Enum value maps for ListAttribute_NumberStyle.
var (
	ListAttribute_NumberStyle_name = map[int32]string{
		0: "NUMBER_STYLE_UNSPECIFIED",
		1: "NUMBER_STYLE_EXAMPLE",
		2: "NUMBER_STYLE_DECIMAL",
		3: "NUMBER_STYLE_LOWER_ROMAN",
		4: "NUMBER_STYLE_UPPER_ROMAN",
		5: "NUMBER_STYLE_LOWER_ALPHA",
		6: "NUMBER_STYLE_UPPER_ALPHA",
	}
	ListAttribute_NumberStyle_value = map[string]int32{
		"NUMBER_STYLE_UNSPECIFIED": 0,
		"NUMBER_STYLE_EXAMPLE":     1,
		"NUMBER_STYLE_DECIMAL":     2,
		"NUMBER_STYLE_LOWER_ROMAN": 3,
		"NUMBER_STYLE_UPPER_ROMAN": 4,
		"NUMBER_STYLE_LOWER_ALPHA": 5,
		"NUMBER_STYLE_UPPER_ALPHA": 6,
	}
)

func (x ListAttribute_NumberStyle) Enum() *ListAttribute_NumberStyle {
	p := new(ListAttribute_NumberStyle)
	*p = x
	return p
}

func (x ListAttribute_NumberStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAttribute_NumberStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_mojo_document_document_proto_enumTypes[0].Descriptor()
}

func (ListAttribute_NumberStyle) Type() protoreflect.EnumType {
	return &file_mojo_document_document_proto_enumTypes[0]
}

func (x ListAttribute_NumberStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAttribute_NumberStyle.Descriptor instead.
func (ListAttribute_NumberStyle) EnumDescriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{8, 0}
}

type ListAttribute_NumberDelimiter int32

const (
	ListAttribute_NUMBER_DELIMITER_UNSPECIFIED ListAttribute_NumberDelimiter = 0
	ListAttribute_NUMBER_DELIMITER_PERIOD      ListAttribute_NumberDelimiter = 1
	ListAttribute_NUMBER_DELIMITER_ONE_PARENT  ListAttribute_NumberDelimiter = 2
	ListAttribute_NUMBER_DELIMITER_TWO_PARENTS ListAttribute_NumberDelimiter = 3
)

// Enum value maps for ListAttribute_NumberDelimiter.
var (
	ListAttribute_NumberDelimiter_name = map[int32]string{
		0: "NUMBER_DELIMITER_UNSPECIFIED",
		1: "NUMBER_DELIMITER_PERIOD",
		2: "NUMBER_DELIMITER_ONE_PARENT",
		3: "NUMBER_DELIMITER_TWO_PARENTS",
	}
	ListAttribute_NumberDelimiter_value = map[string]int32{
		"NUMBER_DELIMITER_UNSPECIFIED": 0,
		"NUMBER_DELIMITER_PERIOD":      1,
		"NUMBER_DELIMITER_ONE_PARENT":  2,
		"NUMBER_DELIMITER_TWO_PARENTS": 3,
	}
)

func (x ListAttribute_NumberDelimiter) Enum() *ListAttribute_NumberDelimiter {
	p := new(ListAttribute_NumberDelimiter)
	*p = x
	return p
}

func (x ListAttribute_NumberDelimiter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAttribute_NumberDelimiter) Descriptor() protoreflect.EnumDescriptor {
	return file_mojo_document_document_proto_enumTypes[1].Descriptor()
}

func (ListAttribute_NumberDelimiter) Type() protoreflect.EnumType {
	return &file_mojo_document_document_proto_enumTypes[1]
}

func (x ListAttribute_NumberDelimiter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAttribute_NumberDelimiter.Descriptor instead.
func (ListAttribute_NumberDelimiter) EnumDescriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{8, 1}
}

type Table_Alignment int32

const (
	Table_ALIGNMENT_UNSPECIFIED Table_Alignment = 0
	Table_ALIGNMENT_LEFT        Table_Alignment = 1
	Table_ALIGNMENT_RIGHT       Table_Alignment = 2
	Table_ALIGNMENT_CENTER      Table_Alignment = 3
)

// Enum value maps for Table_Alignment.
var (
	Table_Alignment_name = map[int32]string{
		0: "ALIGNMENT_UNSPECIFIED",
		1: "ALIGNMENT_LEFT",
		2: "ALIGNMENT_RIGHT",
		3: "ALIGNMENT_CENTER",
	}
	Table_Alignment_value = map[string]int32{
		"ALIGNMENT_UNSPECIFIED": 0,
		"ALIGNMENT_LEFT":        1,
		"ALIGNMENT_RIGHT":       2,
		"ALIGNMENT_CENTER":      3,
	}
)

func (x Table_Alignment) Enum() *Table_Alignment {
	p := new(Table_Alignment)
	*p = x
	return p
}

func (x Table_Alignment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Table_Alignment) Descriptor() protoreflect.EnumDescriptor {
	return file_mojo_document_document_proto_enumTypes[2].Descriptor()
}

func (Table_Alignment) Type() protoreflect.EnumType {
	return &file_mojo_document_document_proto_enumTypes[2]
}

func (x Table_Alignment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Table_Alignment.Descriptor instead.
func (Table_Alignment) EnumDescriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{13, 0}
}

type Quoted_Type int32

const (
	Quoted_TYPE_DOUBLE Quoted_Type = 0
	Quoted_TYPE_SINGLE Quoted_Type = 1
)

// Enum value maps for Quoted_Type.
var (
	Quoted_Type_name = map[int32]string{
		0: "TYPE_DOUBLE",
		1: "TYPE_SINGLE",
	}
	Quoted_Type_value = map[string]int32{
		"TYPE_DOUBLE": 0,
		"TYPE_SINGLE": 1,
	}
)

func (x Quoted_Type) Enum() *Quoted_Type {
	p := new(Quoted_Type)
	*p = x
	return p
}

func (x Quoted_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Quoted_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_mojo_document_document_proto_enumTypes[3].Descriptor()
}

func (Quoted_Type) Type() protoreflect.EnumType {
	return &file_mojo_document_document_proto_enumTypes[3]
}

func (x Quoted_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Quoted_Type.Descriptor instead.
func (Quoted_Type) EnumDescriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{27, 0}
}

type Citation_Mode int32

const (
	Citation_MODE_NORMAL          Citation_Mode = 0
	Citation_MODE_AUTHOR_IN_TEXT  Citation_Mode = 1
	Citation_MODE_SUPPRESS_AUTHOR Citation_Mode = 2
)

// Enum value maps for Citation_Mode.
var (
	Citation_Mode_name = map[int32]string{
		0: "MODE_NORMAL",
		1: "MODE_AUTHOR_IN_TEXT",
		2: "MODE_SUPPRESS_AUTHOR",
	}
	Citation_Mode_value = map[string]int32{
		"MODE_NORMAL":          0,
		"MODE_AUTHOR_IN_TEXT":  1,
		"MODE_SUPPRESS_AUTHOR": 2,
	}
)

func (x Citation_Mode) Enum() *Citation_Mode {
	p := new(Citation_Mode)
	*p = x
	return p
}

func (x Citation_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Citation_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_mojo_document_document_proto_enumTypes[4].Descriptor()
}

func (Citation_Mode) Type() protoreflect.EnumType {
	return &file_mojo_document_document_proto_enumTypes[4]
}

func (x Citation_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Citation_Mode.Descriptor instead.
func (Citation_Mode) EnumDescriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{29, 0}
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaData *MetaData `protobuf:"bytes,1,opt,name=meta_data,json=metaData,proto3" json:"metaData,omitempty"`
	Blocks   []*Block  `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{0}
}

func (x *Document) GetMetaData() *MetaData {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *Document) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Block:
	//	*Block_Plain
	//	*Block_Paragraph
	//	*Block_LineBlock
	//	*Block_CodeBlock
	//	*Block_QuoteBlock
	//	*Block_OrderedList
	//	*Block_BulletList
	//	*Block_DefinitionList
	//	*Block_Header
	//	*Block_Table
	//	*Block_Division
	Block isBlock_Block `protobuf_oneof:"block" json:"block,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{1}
}

func (m *Block) GetBlock() isBlock_Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (x *Block) GetPlain() *Plain {
	if x, ok := x.GetBlock().(*Block_Plain); ok {
		return x.Plain
	}
	return nil
}

func (x *Block) GetParagraph() *Paragraph {
	if x, ok := x.GetBlock().(*Block_Paragraph); ok {
		return x.Paragraph
	}
	return nil
}

func (x *Block) GetLineBlock() *LineBlock {
	if x, ok := x.GetBlock().(*Block_LineBlock); ok {
		return x.LineBlock
	}
	return nil
}

func (x *Block) GetCodeBlock() *CodeBlock {
	if x, ok := x.GetBlock().(*Block_CodeBlock); ok {
		return x.CodeBlock
	}
	return nil
}

func (x *Block) GetQuoteBlock() *QuoteBlock {
	if x, ok := x.GetBlock().(*Block_QuoteBlock); ok {
		return x.QuoteBlock
	}
	return nil
}

func (x *Block) GetOrderedList() *OrderedList {
	if x, ok := x.GetBlock().(*Block_OrderedList); ok {
		return x.OrderedList
	}
	return nil
}

func (x *Block) GetBulletList() *BulletList {
	if x, ok := x.GetBlock().(*Block_BulletList); ok {
		return x.BulletList
	}
	return nil
}

func (x *Block) GetDefinitionList() *DefinitionList {
	if x, ok := x.GetBlock().(*Block_DefinitionList); ok {
		return x.DefinitionList
	}
	return nil
}

func (x *Block) GetHeader() *Header {
	if x, ok := x.GetBlock().(*Block_Header); ok {
		return x.Header
	}
	return nil
}

func (x *Block) GetTable() *Table {
	if x, ok := x.GetBlock().(*Block_Table); ok {
		return x.Table
	}
	return nil
}

func (x *Block) GetDivision() *Division {
	if x, ok := x.GetBlock().(*Block_Division); ok {
		return x.Division
	}
	return nil
}

type isBlock_Block interface {
	isBlock_Block()
}

type Block_Plain struct {
	Plain *Plain `protobuf:"bytes,1,opt,name=plain,proto3,oneof" json:"plain,omitempty"`
}

type Block_Paragraph struct {
	Paragraph *Paragraph `protobuf:"bytes,2,opt,name=paragraph,proto3,oneof" json:"paragraph,omitempty"`
}

type Block_LineBlock struct {
	LineBlock *LineBlock `protobuf:"bytes,3,opt,name=line_block,json=lineBlock,proto3,oneof" json:"lineBlock,omitempty"`
}

type Block_CodeBlock struct {
	CodeBlock *CodeBlock `protobuf:"bytes,4,opt,name=code_block,json=codeBlock,proto3,oneof" json:"codeBlock,omitempty"`
}

type Block_QuoteBlock struct {
	QuoteBlock *QuoteBlock `protobuf:"bytes,5,opt,name=quote_block,json=quoteBlock,proto3,oneof" json:"quoteBlock,omitempty"`
}

type Block_OrderedList struct {
	OrderedList *OrderedList `protobuf:"bytes,6,opt,name=ordered_list,json=orderedList,proto3,oneof" json:"orderedList,omitempty"`
}

type Block_BulletList struct {
	BulletList *BulletList `protobuf:"bytes,7,opt,name=bullet_list,json=bulletList,proto3,oneof" json:"bulletList,omitempty"`
}

type Block_DefinitionList struct {
	DefinitionList *DefinitionList `protobuf:"bytes,8,opt,name=definition_list,json=definitionList,proto3,oneof" json:"definitionList,omitempty"`
}

type Block_Header struct {
	Header *Header `protobuf:"bytes,9,opt,name=header,proto3,oneof" json:"header,omitempty"`
}

type Block_Table struct {
	Table *Table `protobuf:"bytes,10,opt,name=table,proto3,oneof" json:"table,omitempty"`
}

type Block_Division struct {
	Division *Division `protobuf:"bytes,11,opt,name=division,proto3,oneof" json:"division,omitempty"`
}

func (*Block_Plain) isBlock_Block() {}

func (*Block_Paragraph) isBlock_Block() {}

func (*Block_LineBlock) isBlock_Block() {}

func (*Block_CodeBlock) isBlock_Block() {}

func (*Block_QuoteBlock) isBlock_Block() {}

func (*Block_OrderedList) isBlock_Block() {}

func (*Block_BulletList) isBlock_Block() {}

func (*Block_DefinitionList) isBlock_Block() {}

func (*Block_Header) isBlock_Block() {}

func (*Block_Table) isBlock_Block() {}

func (*Block_Division) isBlock_Block() {}

type Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Inline `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Line) Reset() {
	*x = Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Line) ProtoMessage() {}

func (x *Line) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Line.ProtoReflect.Descriptor instead.
func (*Line) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{2}
}

func (x *Line) GetVals() []*Inline {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Plain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inlines []*Inline `protobuf:"bytes,2,rep,name=inlines,proto3" json:"inlines,omitempty"`
}

func (x *Plain) Reset() {
	*x = Plain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plain) ProtoMessage() {}

func (x *Plain) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plain.ProtoReflect.Descriptor instead.
func (*Plain) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{3}
}

func (x *Plain) GetInlines() []*Inline {
	if x != nil {
		return x.Inlines
	}
	return nil
}

type Paragraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inlines []*Inline `protobuf:"bytes,2,rep,name=inlines,proto3" json:"inlines,omitempty"`
}

func (x *Paragraph) Reset() {
	*x = Paragraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paragraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paragraph) ProtoMessage() {}

func (x *Paragraph) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paragraph.ProtoReflect.Descriptor instead.
func (*Paragraph) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{4}
}

func (x *Paragraph) GetInlines() []*Inline {
	if x != nil {
		return x.Inlines
	}
	return nil
}

type LineBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines []*Line `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
}

func (x *LineBlock) Reset() {
	*x = LineBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineBlock) ProtoMessage() {}

func (x *LineBlock) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineBlock.ProtoReflect.Descriptor instead.
func (*LineBlock) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{5}
}

func (x *LineBlock) GetLines() []*Line {
	if x != nil {
		return x.Lines
	}
	return nil
}

type CodeBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute *Attribute `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Language  string     `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Lines     []*Line    `protobuf:"bytes,3,rep,name=lines,proto3" json:"lines,omitempty"`
}

func (x *CodeBlock) Reset() {
	*x = CodeBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeBlock) ProtoMessage() {}

func (x *CodeBlock) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeBlock.ProtoReflect.Descriptor instead.
func (*CodeBlock) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{6}
}

func (x *CodeBlock) GetAttribute() *Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *CodeBlock) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CodeBlock) GetLines() []*Line {
	if x != nil {
		return x.Lines
	}
	return nil
}

type QuoteBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *QuoteBlock) Reset() {
	*x = QuoteBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteBlock) ProtoMessage() {}

func (x *QuoteBlock) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteBlock.ProtoReflect.Descriptor instead.
func (*QuoteBlock) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{7}
}

func (x *QuoteBlock) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type ListAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginNumber     int64                         `protobuf:"varint,1,opt,name=begin_number,json=beginNumber,proto3" json:"beginNumber,omitempty"`
	NumberStyle     ListAttribute_NumberStyle     `protobuf:"varint,2,opt,name=number_style,json=numberStyle,proto3,enum=mojo.document.ListAttribute_NumberStyle" json:"numberStyle,omitempty"`
	NumberDelimiter ListAttribute_NumberDelimiter `protobuf:"varint,3,opt,name=number_delimiter,json=numberDelimiter,proto3,enum=mojo.document.ListAttribute_NumberDelimiter" json:"numberDelimiter,omitempty"`
}

func (x *ListAttribute) Reset() {
	*x = ListAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttribute) ProtoMessage() {}

func (x *ListAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttribute.ProtoReflect.Descriptor instead.
func (*ListAttribute) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{8}
}

func (x *ListAttribute) GetBeginNumber() int64 {
	if x != nil {
		return x.BeginNumber
	}
	return 0
}

func (x *ListAttribute) GetNumberStyle() ListAttribute_NumberStyle {
	if x != nil {
		return x.NumberStyle
	}
	return ListAttribute_NUMBER_STYLE_UNSPECIFIED
}

func (x *ListAttribute) GetNumberDelimiter() ListAttribute_NumberDelimiter {
	if x != nil {
		return x.NumberDelimiter
	}
	return ListAttribute_NUMBER_DELIMITER_UNSPECIFIED
}

type OrderedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute *ListAttribute        `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Items     []*OrderedList_Blocks `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *OrderedList) Reset() {
	*x = OrderedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderedList) ProtoMessage() {}

func (x *OrderedList) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderedList.ProtoReflect.Descriptor instead.
func (*OrderedList) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{9}
}

func (x *OrderedList) GetAttribute() *ListAttribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *OrderedList) GetItems() []*OrderedList_Blocks {
	if x != nil {
		return x.Items
	}
	return nil
}

type BulletList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*BulletList_Blocks `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BulletList) Reset() {
	*x = BulletList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulletList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulletList) ProtoMessage() {}

func (x *BulletList) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulletList.ProtoReflect.Descriptor instead.
func (*BulletList) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{10}
}

func (x *BulletList) GetItems() []*BulletList_Blocks {
	if x != nil {
		return x.Items
	}
	return nil
}

type DefinitionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DefinitionList_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DefinitionList) Reset() {
	*x = DefinitionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefinitionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefinitionList) ProtoMessage() {}

func (x *DefinitionList) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefinitionList.ProtoReflect.Descriptor instead.
func (*DefinitionList) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{11}
}

func (x *DefinitionList) GetItems() []*DefinitionList_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute *Attribute `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Level     int64      `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Text      []*Inline  `protobuf:"bytes,3,rep,name=text,proto3" json:"text,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{12}
}

func (x *Header) GetAttribute() *Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Header) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Header) GetText() []*Inline {
	if x != nil {
		return x.Text
	}
	return nil
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caption   []*Inline       `protobuf:"bytes,1,rep,name=caption,proto3" json:"caption,omitempty"`
	Alignment Table_Alignment `protobuf:"varint,2,opt,name=alignment,proto3,enum=mojo.document.Table_Alignment" json:"alignment,omitempty"`
	Width     float64         `protobuf:"fixed64,3,opt,name=width,proto3" json:"width,omitempty"`
	Header    *Table_Header   `protobuf:"bytes,4,opt,name=header,proto3" json:"header,omitempty"`
	Rows      []*Table_Row    `protobuf:"bytes,5,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{13}
}

func (x *Table) GetCaption() []*Inline {
	if x != nil {
		return x.Caption
	}
	return nil
}

func (x *Table) GetAlignment() Table_Alignment {
	if x != nil {
		return x.Alignment
	}
	return Table_ALIGNMENT_UNSPECIFIED
}

func (x *Table) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Table) GetHeader() *Table_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Table) GetRows() []*Table_Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Division struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute *Attribute `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Content   []*Block   `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *Division) Reset() {
	*x = Division{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Division) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Division) ProtoMessage() {}

func (x *Division) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Division.ProtoReflect.Descriptor instead.
func (*Division) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{14}
}

func (x *Division) GetAttribute() *Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Division) GetContent() []*Block {
	if x != nil {
		return x.Content
	}
	return nil
}

type Blocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Block `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Blocks) Reset() {
	*x = Blocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blocks) ProtoMessage() {}

func (x *Blocks) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blocks.ProtoReflect.Descriptor instead.
func (*Blocks) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{15}
}

func (x *Blocks) GetVals() []*Block {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Inline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Inline:
	//	*Inline_Text
	//	*Inline_Emphasized
	//	*Inline_Strong
	//	*Inline_Strikeout
	//	*Inline_Superscript
	//	*Inline_Subscript
	//	*Inline_SmallCaps
	//	*Inline_Quoted
	//	*Inline_Cite
	//	*Inline_Code
	//	*Inline_Space
	//	*Inline_LineBreak
	//	*Inline_Link
	//	*Inline_Image
	//	*Inline_Note
	//	*Inline_Span
	Inline isInline_Inline `protobuf_oneof:"inline" json:"inline,omitempty"`
}

func (x *Inline) Reset() {
	*x = Inline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inline) ProtoMessage() {}

func (x *Inline) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inline.ProtoReflect.Descriptor instead.
func (*Inline) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{16}
}

func (m *Inline) GetInline() isInline_Inline {
	if m != nil {
		return m.Inline
	}
	return nil
}

func (x *Inline) GetText() *Text {
	if x, ok := x.GetInline().(*Inline_Text); ok {
		return x.Text
	}
	return nil
}

func (x *Inline) GetEmphasized() *Emphasized {
	if x, ok := x.GetInline().(*Inline_Emphasized); ok {
		return x.Emphasized
	}
	return nil
}

func (x *Inline) GetStrong() *Strong {
	if x, ok := x.GetInline().(*Inline_Strong); ok {
		return x.Strong
	}
	return nil
}

func (x *Inline) GetStrikeout() *Strikeout {
	if x, ok := x.GetInline().(*Inline_Strikeout); ok {
		return x.Strikeout
	}
	return nil
}

func (x *Inline) GetSuperscript() *Superscript {
	if x, ok := x.GetInline().(*Inline_Superscript); ok {
		return x.Superscript
	}
	return nil
}

func (x *Inline) GetSubscript() *Subscript {
	if x, ok := x.GetInline().(*Inline_Subscript); ok {
		return x.Subscript
	}
	return nil
}

func (x *Inline) GetSmallCaps() *SmallCaps {
	if x, ok := x.GetInline().(*Inline_SmallCaps); ok {
		return x.SmallCaps
	}
	return nil
}

func (x *Inline) GetQuoted() *Quoted {
	if x, ok := x.GetInline().(*Inline_Quoted); ok {
		return x.Quoted
	}
	return nil
}

func (x *Inline) GetCite() *Cite {
	if x, ok := x.GetInline().(*Inline_Cite); ok {
		return x.Cite
	}
	return nil
}

func (x *Inline) GetCode() *Code {
	if x, ok := x.GetInline().(*Inline_Code); ok {
		return x.Code
	}
	return nil
}

func (x *Inline) GetSpace() *Space {
	if x, ok := x.GetInline().(*Inline_Space); ok {
		return x.Space
	}
	return nil
}

func (x *Inline) GetLineBreak() *LineBreak {
	if x, ok := x.GetInline().(*Inline_LineBreak); ok {
		return x.LineBreak
	}
	return nil
}

func (x *Inline) GetLink() *Link {
	if x, ok := x.GetInline().(*Inline_Link); ok {
		return x.Link
	}
	return nil
}

func (x *Inline) GetImage() *Image {
	if x, ok := x.GetInline().(*Inline_Image); ok {
		return x.Image
	}
	return nil
}

func (x *Inline) GetNote() *Note {
	if x, ok := x.GetInline().(*Inline_Note); ok {
		return x.Note
	}
	return nil
}

func (x *Inline) GetSpan() *Span {
	if x, ok := x.GetInline().(*Inline_Span); ok {
		return x.Span
	}
	return nil
}

type isInline_Inline interface {
	isInline_Inline()
}

type Inline_Text struct {
	Text *Text `protobuf:"bytes,1,opt,name=text,proto3,oneof" json:"text,omitempty"`
}

type Inline_Emphasized struct {
	Emphasized *Emphasized `protobuf:"bytes,2,opt,name=emphasized,proto3,oneof" json:"emphasized,omitempty"`
}

type Inline_Strong struct {
	Strong *Strong `protobuf:"bytes,3,opt,name=strong,proto3,oneof" json:"strong,omitempty"`
}

type Inline_Strikeout struct {
	Strikeout *Strikeout `protobuf:"bytes,4,opt,name=strikeout,proto3,oneof" json:"strikeout,omitempty"`
}

type Inline_Superscript struct {
	Superscript *Superscript `protobuf:"bytes,5,opt,name=superscript,proto3,oneof" json:"superscript,omitempty"`
}

type Inline_Subscript struct {
	Subscript *Subscript `protobuf:"bytes,6,opt,name=subscript,proto3,oneof" json:"subscript,omitempty"`
}

type Inline_SmallCaps struct {
	SmallCaps *SmallCaps `protobuf:"bytes,7,opt,name=small_caps,json=smallCaps,proto3,oneof" json:"smallCaps,omitempty"`
}

type Inline_Quoted struct {
	Quoted *Quoted `protobuf:"bytes,8,opt,name=quoted,proto3,oneof" json:"quoted,omitempty"`
}

type Inline_Cite struct {
	Cite *Cite `protobuf:"bytes,9,opt,name=cite,proto3,oneof" json:"cite,omitempty"`
}

type Inline_Code struct {
	Code *Code `protobuf:"bytes,10,opt,name=code,proto3,oneof" json:"code,omitempty"`
}

type Inline_Space struct {
	Space *Space `protobuf:"bytes,11,opt,name=space,proto3,oneof" json:"space,omitempty"`
}

type Inline_LineBreak struct {
	LineBreak *LineBreak `protobuf:"bytes,12,opt,name=line_break,json=lineBreak,proto3,oneof" json:"lineBreak,omitempty"`
}

type Inline_Link struct {
	Link *Link `protobuf:"bytes,13,opt,name=link,proto3,oneof" json:"link,omitempty"`
}

type Inline_Image struct {
	Image *Image `protobuf:"bytes,14,opt,name=image,proto3,oneof" json:"image,omitempty"`
}

type Inline_Note struct {
	Note *Note `protobuf:"bytes,15,opt,name=note,proto3,oneof" json:"note,omitempty"`
}

type Inline_Span struct {
	Span *Span `protobuf:"bytes,16,opt,name=span,proto3,oneof" json:"span,omitempty"`
}

func (*Inline_Text) isInline_Inline() {}

func (*Inline_Emphasized) isInline_Inline() {}

func (*Inline_Strong) isInline_Inline() {}

func (*Inline_Strikeout) isInline_Inline() {}

func (*Inline_Superscript) isInline_Inline() {}

func (*Inline_Subscript) isInline_Inline() {}

func (*Inline_SmallCaps) isInline_Inline() {}

func (*Inline_Quoted) isInline_Inline() {}

func (*Inline_Cite) isInline_Inline() {}

func (*Inline_Code) isInline_Inline() {}

func (*Inline_Space) isInline_Inline() {}

func (*Inline_LineBreak) isInline_Inline() {}

func (*Inline_Link) isInline_Inline() {}

func (*Inline_Image) isInline_Inline() {}

func (*Inline_Note) isInline_Inline() {}

func (*Inline_Span) isInline_Inline() {}

type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val string `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{17}
}

func (x *Text) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type Emphasized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Inline `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Emphasized) Reset() {
	*x = Emphasized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emphasized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emphasized) ProtoMessage() {}

func (x *Emphasized) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emphasized.ProtoReflect.Descriptor instead.
func (*Emphasized) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{18}
}

func (x *Emphasized) GetVals() []*Inline {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Strong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Inline `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Strong) Reset() {
	*x = Strong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strong) ProtoMessage() {}

func (x *Strong) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strong.ProtoReflect.Descriptor instead.
func (*Strong) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{19}
}

func (x *Strong) GetVals() []*Inline {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Strikeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Inline `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Strikeout) Reset() {
	*x = Strikeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strikeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strikeout) ProtoMessage() {}

func (x *Strikeout) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strikeout.ProtoReflect.Descriptor instead.
func (*Strikeout) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{20}
}

func (x *Strikeout) GetVals() []*Inline {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Superscript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Inline `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Superscript) Reset() {
	*x = Superscript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Superscript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Superscript) ProtoMessage() {}

func (x *Superscript) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Superscript.ProtoReflect.Descriptor instead.
func (*Superscript) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{21}
}

func (x *Superscript) GetVals() []*Inline {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Subscript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Inline `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Subscript) Reset() {
	*x = Subscript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscript) ProtoMessage() {}

func (x *Subscript) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscript.ProtoReflect.Descriptor instead.
func (*Subscript) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{22}
}

func (x *Subscript) GetVals() []*Inline {
	if x != nil {
		return x.Vals
	}
	return nil
}

type SmallCaps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Inline `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *SmallCaps) Reset() {
	*x = SmallCaps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmallCaps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmallCaps) ProtoMessage() {}

func (x *SmallCaps) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmallCaps.ProtoReflect.Descriptor instead.
func (*SmallCaps) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{23}
}

func (x *SmallCaps) GetVals() []*Inline {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Space struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Space) Reset() {
	*x = Space{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Space) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Space) ProtoMessage() {}

func (x *Space) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Space.ProtoReflect.Descriptor instead.
func (*Space) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{24}
}

type LineBreak struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LineBreak) Reset() {
	*x = LineBreak{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineBreak) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineBreak) ProtoMessage() {}

func (x *LineBreak) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineBreak.ProtoReflect.Descriptor instead.
func (*LineBreak) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{25}
}

type Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Block `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Note) Reset() {
	*x = Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{26}
}

func (x *Note) GetVals() []*Block {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Quoted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Quoted_Type `protobuf:"varint,1,opt,name=type,proto3,enum=mojo.document.Quoted_Type" json:"type,omitempty"`
	Text []*Inline   `protobuf:"bytes,2,rep,name=text,proto3" json:"text,omitempty"`
}

func (x *Quoted) Reset() {
	*x = Quoted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quoted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quoted) ProtoMessage() {}

func (x *Quoted) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quoted.ProtoReflect.Descriptor instead.
func (*Quoted) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{27}
}

func (x *Quoted) GetType() Quoted_Type {
	if x != nil {
		return x.Type
	}
	return Quoted_TYPE_DOUBLE
}

func (x *Quoted) GetText() []*Inline {
	if x != nil {
		return x.Text
	}
	return nil
}

type Cite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Citations []*Citation `protobuf:"bytes,1,rep,name=citations,proto3" json:"citations,omitempty"`
	Inlines   []*Inline   `protobuf:"bytes,2,rep,name=inlines,proto3" json:"inlines,omitempty"`
}

func (x *Cite) Reset() {
	*x = Cite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cite) ProtoMessage() {}

func (x *Cite) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cite.ProtoReflect.Descriptor instead.
func (*Cite) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{28}
}

func (x *Cite) GetCitations() []*Citation {
	if x != nil {
		return x.Citations
	}
	return nil
}

func (x *Cite) GetInlines() []*Inline {
	if x != nil {
		return x.Inlines
	}
	return nil
}

type Citation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Prefix    []*Inline     `protobuf:"bytes,2,rep,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix    []*Inline     `protobuf:"bytes,3,rep,name=suffix,proto3" json:"suffix,omitempty"`
	Mode      Citation_Mode `protobuf:"varint,4,opt,name=mode,proto3,enum=mojo.document.Citation_Mode" json:"mode,omitempty"`
	NoteCount int64         `protobuf:"varint,5,opt,name=note_count,json=noteCount,proto3" json:"noteCount,omitempty"`
	Hash      int64         `protobuf:"varint,6,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Citation) Reset() {
	*x = Citation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Citation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Citation) ProtoMessage() {}

func (x *Citation) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Citation.ProtoReflect.Descriptor instead.
func (*Citation) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{29}
}

func (x *Citation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Citation) GetPrefix() []*Inline {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *Citation) GetSuffix() []*Inline {
	if x != nil {
		return x.Suffix
	}
	return nil
}

func (x *Citation) GetMode() Citation_Mode {
	if x != nil {
		return x.Mode
	}
	return Citation_MODE_NORMAL
}

func (x *Citation) GetNoteCount() int64 {
	if x != nil {
		return x.NoteCount
	}
	return 0
}

func (x *Citation) GetHash() int64 {
	if x != nil {
		return x.Hash
	}
	return 0
}

type Code struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute *Attribute `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Content   string     `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Code) Reset() {
	*x = Code{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Code) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Code) ProtoMessage() {}

func (x *Code) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Code.ProtoReflect.Descriptor instead.
func (*Code) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{30}
}

func (x *Code) GetAttribute() *Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Code) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute   *Attribute `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Description []*Inline  `protobuf:"bytes,2,rep,name=description,proto3" json:"description,omitempty"`
	Target      *Target    `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{31}
}

func (x *Link) GetAttribute() *Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Link) GetDescription() []*Inline {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Link) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute   *Attribute `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Description []*Inline  `protobuf:"bytes,2,rep,name=description,proto3" json:"description,omitempty"`
	Target      *Target    `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{32}
}

func (x *Image) GetAttribute() *Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Image) GetDescription() []*Inline {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Image) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type Span struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute *Attribute `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Inlines   []*Inline  `protobuf:"bytes,2,rep,name=inlines,proto3" json:"inlines,omitempty"`
}

func (x *Span) Reset() {
	*x = Span{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{33}
}

func (x *Span) GetAttribute() *Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Span) GetInlines() []*Inline {
	if x != nil {
		return x.Inlines
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string    `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url   *core.Url `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{34}
}

func (x *Target) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Target) GetUrl() *core.Url {
	if x != nil {
		return x.Url
	}
	return nil
}

type Inlines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Inline `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Inlines) Reset() {
	*x = Inlines{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inlines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inlines) ProtoMessage() {}

func (x *Inlines) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inlines.ProtoReflect.Descriptor instead.
func (*Inlines) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{35}
}

func (x *Inlines) GetVals() []*Inline {
	if x != nil {
		return x.Vals
	}
	return nil
}

type MetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals map[string]*MetaValue `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MetaData) Reset() {
	*x = MetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData) ProtoMessage() {}

func (x *MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData.ProtoReflect.Descriptor instead.
func (*MetaData) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{36}
}

func (x *MetaData) GetVals() map[string]*MetaValue {
	if x != nil {
		return x.Vals
	}
	return nil
}

type MetaValueObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals map[string]*MetaValue `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MetaValueObject) Reset() {
	*x = MetaValueObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaValueObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaValueObject) ProtoMessage() {}

func (x *MetaValueObject) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaValueObject.ProtoReflect.Descriptor instead.
func (*MetaValueObject) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{37}
}

func (x *MetaValueObject) GetVals() map[string]*MetaValue {
	if x != nil {
		return x.Vals
	}
	return nil
}

type MetaValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*MetaValue `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *MetaValues) Reset() {
	*x = MetaValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaValues) ProtoMessage() {}

func (x *MetaValues) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaValues.ProtoReflect.Descriptor instead.
func (*MetaValues) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{38}
}

func (x *MetaValues) GetVals() []*MetaValue {
	if x != nil {
		return x.Vals
	}
	return nil
}

type MetaValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MetaValue:
	//	*MetaValue_MetaValueObjectVal
	//	*MetaValue_MetaValuesVal
	//	*MetaValue_BoolVal
	//	*MetaValue_StringVal
	//	*MetaValue_DateTimeVal
	//	*MetaValue_InlinesVal
	//	*MetaValue_BlocksVal
	MetaValue isMetaValue_MetaValue `protobuf_oneof:"meta_value" json:"metaValue,omitempty"`
}

func (x *MetaValue) Reset() {
	*x = MetaValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaValue) ProtoMessage() {}

func (x *MetaValue) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaValue.ProtoReflect.Descriptor instead.
func (*MetaValue) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{39}
}

func (m *MetaValue) GetMetaValue() isMetaValue_MetaValue {
	if m != nil {
		return m.MetaValue
	}
	return nil
}

func (x *MetaValue) GetMetaValueObjectVal() *MetaValueObject {
	if x, ok := x.GetMetaValue().(*MetaValue_MetaValueObjectVal); ok {
		return x.MetaValueObjectVal
	}
	return nil
}

func (x *MetaValue) GetMetaValuesVal() *MetaValues {
	if x, ok := x.GetMetaValue().(*MetaValue_MetaValuesVal); ok {
		return x.MetaValuesVal
	}
	return nil
}

func (x *MetaValue) GetBoolVal() bool {
	if x, ok := x.GetMetaValue().(*MetaValue_BoolVal); ok {
		return x.BoolVal
	}
	return false
}

func (x *MetaValue) GetStringVal() string {
	if x, ok := x.GetMetaValue().(*MetaValue_StringVal); ok {
		return x.StringVal
	}
	return ""
}

func (x *MetaValue) GetDateTimeVal() *core.DateTime {
	if x, ok := x.GetMetaValue().(*MetaValue_DateTimeVal); ok {
		return x.DateTimeVal
	}
	return nil
}

func (x *MetaValue) GetInlinesVal() *Inlines {
	if x, ok := x.GetMetaValue().(*MetaValue_InlinesVal); ok {
		return x.InlinesVal
	}
	return nil
}

func (x *MetaValue) GetBlocksVal() *Blocks {
	if x, ok := x.GetMetaValue().(*MetaValue_BlocksVal); ok {
		return x.BlocksVal
	}
	return nil
}

type isMetaValue_MetaValue interface {
	isMetaValue_MetaValue()
}

type MetaValue_MetaValueObjectVal struct {
	MetaValueObjectVal *MetaValueObject `protobuf:"bytes,1,opt,name=meta_value_object_val,json=metaValueObjectVal,proto3,oneof" json:"metaValueObjectVal,omitempty"`
}

type MetaValue_MetaValuesVal struct {
	MetaValuesVal *MetaValues `protobuf:"bytes,2,opt,name=meta_values_val,json=metaValuesVal,proto3,oneof" json:"metaValuesVal,omitempty"`
}

type MetaValue_BoolVal struct {
	BoolVal bool `protobuf:"varint,3,opt,name=bool_val,json=boolVal,proto3,oneof" json:"boolVal,omitempty"`
}

type MetaValue_StringVal struct {
	StringVal string `protobuf:"bytes,4,opt,name=string_val,json=stringVal,proto3,oneof" json:"stringVal,omitempty"`
}

type MetaValue_DateTimeVal struct {
	DateTimeVal *core.DateTime `protobuf:"bytes,10,opt,name=date_time_val,json=dateTimeVal,proto3,oneof" json:"dateTimeVal,omitempty"`
}

type MetaValue_InlinesVal struct {
	InlinesVal *Inlines `protobuf:"bytes,14,opt,name=inlines_val,json=inlinesVal,proto3,oneof" json:"inlinesVal,omitempty"`
}

type MetaValue_BlocksVal struct {
	BlocksVal *Blocks `protobuf:"bytes,15,opt,name=blocks_val,json=blocksVal,proto3,oneof" json:"blocksVal,omitempty"`
}

func (*MetaValue_MetaValueObjectVal) isMetaValue_MetaValue() {}

func (*MetaValue_MetaValuesVal) isMetaValue_MetaValue() {}

func (*MetaValue_BoolVal) isMetaValue_MetaValue() {}

func (*MetaValue_StringVal) isMetaValue_MetaValue() {}

func (*MetaValue_DateTimeVal) isMetaValue_MetaValue() {}

func (*MetaValue_InlinesVal) isMetaValue_MetaValue() {}

func (*MetaValue_BlocksVal) isMetaValue_MetaValue() {}

type OrderedList_Blocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Block `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *OrderedList_Blocks) Reset() {
	*x = OrderedList_Blocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderedList_Blocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderedList_Blocks) ProtoMessage() {}

func (x *OrderedList_Blocks) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderedList_Blocks.ProtoReflect.Descriptor instead.
func (*OrderedList_Blocks) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{9, 0}
}

func (x *OrderedList_Blocks) GetVals() []*Block {
	if x != nil {
		return x.Vals
	}
	return nil
}

type BulletList_Blocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Block `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *BulletList_Blocks) Reset() {
	*x = BulletList_Blocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulletList_Blocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulletList_Blocks) ProtoMessage() {}

func (x *BulletList_Blocks) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulletList_Blocks.ProtoReflect.Descriptor instead.
func (*BulletList_Blocks) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{10, 0}
}

func (x *BulletList_Blocks) GetVals() []*Block {
	if x != nil {
		return x.Vals
	}
	return nil
}

type DefinitionList_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term        []*Inline `protobuf:"bytes,1,rep,name=term,proto3" json:"term,omitempty"`
	Definitions []*Blocks `protobuf:"bytes,2,rep,name=definitions,proto3" json:"definitions,omitempty"`
}

func (x *DefinitionList_Item) Reset() {
	*x = DefinitionList_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefinitionList_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefinitionList_Item) ProtoMessage() {}

func (x *DefinitionList_Item) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefinitionList_Item.ProtoReflect.Descriptor instead.
func (*DefinitionList_Item) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{11, 0}
}

func (x *DefinitionList_Item) GetTerm() []*Inline {
	if x != nil {
		return x.Term
	}
	return nil
}

func (x *DefinitionList_Item) GetDefinitions() []*Blocks {
	if x != nil {
		return x.Definitions
	}
	return nil
}

type Table_Cell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Block `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Table_Cell) Reset() {
	*x = Table_Cell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table_Cell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table_Cell) ProtoMessage() {}

func (x *Table_Cell) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table_Cell.ProtoReflect.Descriptor instead.
func (*Table_Cell) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Table_Cell) GetVals() []*Block {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Table_Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Table_Cell `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Table_Row) Reset() {
	*x = Table_Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table_Row) ProtoMessage() {}

func (x *Table_Row) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table_Row.ProtoReflect.Descriptor instead.
func (*Table_Row) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{13, 1}
}

func (x *Table_Row) GetVals() []*Table_Cell {
	if x != nil {
		return x.Vals
	}
	return nil
}

type Table_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*Table_Cell `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *Table_Header) Reset() {
	*x = Table_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_document_document_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table_Header) ProtoMessage() {}

func (x *Table_Header) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_document_document_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table_Header.ProtoReflect.Descriptor instead.
func (*Table_Header) Descriptor() ([]byte, []int) {
	return file_mojo_document_document_proto_rawDescGZIP(), []int{13, 2}
}

func (x *Table_Header) GetVals() []*Table_Cell {
	if x != nil {
		return x.Vals
	}
	return nil
}

var File_mojo_document_document_proto protoreflect.FileDescriptor

var file_mojo_document_document_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x14, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x75,
	0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x8b, 0x05, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12,
	0x38, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x48, 0x00, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x3c, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x00, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3f, 0x0a,
	0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x0b, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x31, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x38, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x69,
	0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x22, 0x3c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12,
	0x2f, 0x0a, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x22, 0x36, 0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x29, 0x0a,
	0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x64,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x05,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x22, 0xc8, 0x04, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x22, 0xd7, 0x01, 0x0a,
	0x0b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x45, 0x58, 0x41, 0x4d, 0x50,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x59, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x43, 0x49, 0x4d, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x1c,
	0x0a, 0x18, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x4c,
	0x4f, 0x57, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4d, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x50,
	0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4d, 0x41, 0x4e, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x4c, 0x4f, 0x57, 0x45, 0x52,
	0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x55, 0x4d, 0x42,
	0x45, 0x52, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x41,
	0x4c, 0x50, 0x48, 0x41, 0x10, 0x06, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x52, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x52,
	0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x4e,
	0x45, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x52, 0x5f, 0x54,
	0x57, 0x4f, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x03, 0x22, 0xb6, 0x01, 0x0a,
	0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x1a, 0x32, 0x0a, 0x06, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x76,
	0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x78, 0x0a, 0x0a, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x32, 0x0a, 0x06, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22,
	0xb6, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x6a, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12,
	0x37, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x0b, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xf7, 0x03, 0x0a,
	0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07,
	0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x61, 0x6c, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x1a, 0x30,
	0x0a, 0x04, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x28, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73,
	0x1a, 0x34, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12, 0x2d, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x65, 0x6c, 0x6c,
	0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x1a, 0x37, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x2d, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22,
	0x65, 0x0a, 0x09, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x15,
	0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x49, 0x47, 0x4e,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41,
	0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x45,
	0x4e, 0x54, 0x45, 0x52, 0x10, 0x03, 0x22, 0x72, 0x0a, 0x08, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x06, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0xb9,
	0x06, 0x0a, 0x06, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x7a,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69,
	0x7a, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x7a, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x6f,
	0x6e, 0x67, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x6f, 0x75, 0x74, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x3e, 0x0a, 0x0b,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52,
	0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x61, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c,
	0x43, 0x61, 0x70, 0x73, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x70,
	0x73, 0x12, 0x2f, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x69, 0x74, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x62,
	0x72, 0x65, 0x61, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x42,
	0x72, 0x65, 0x61, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x72, 0x65, 0x61,
	0x6b, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x73, 0x70, 0x61, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x18, 0x0a, 0x04, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x22, 0x37, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x7a,
	0x65, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x33, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x76, 0x61,
	0x6c, 0x73, 0x22, 0x36, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x29, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x38, 0x0a, 0x0b, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x76, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04,
	0x76, 0x61, 0x6c, 0x73, 0x22, 0x36, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x29, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x36, 0x0a, 0x09,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x70, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x76, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04,
	0x76, 0x61, 0x6c, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0x0b, 0x0a,
	0x09, 0x4c, 0x69, 0x6e, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x22, 0x30, 0x0a, 0x04, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x8d, 0x01, 0x0a,
	0x06, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x22, 0x6e, 0x0a, 0x04,
	0x43, 0x69, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xa9, 0x02, 0x0a,
	0x08, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x30, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e,
	0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x4a, 0x0a, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x18,
	0x0a, 0x14, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x52, 0x45, 0x53, 0x53, 0x5f,
	0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x58, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x36, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x36, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x05,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x37, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x6f, 0x0a, 0x04, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x36, 0x0a,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x72, 0x6c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x34, 0x0a, 0x07, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x94,
	0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x04, 0x76,
	0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x76, 0x61,
	0x6c, 0x73, 0x1a, 0x51, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x76, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x1a, 0x51, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a, 0x0a, 0x4d, 0x65,
	0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x9f, 0x03, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x0d, 0x6d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x12, 0x1b,
	0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0d,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x56,
	0x61, 0x6c, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x48, 0x00, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x56, 0x61, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6a, 0x0a, 0x1a, 0x6f, 0x72, 0x67, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2d, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x3b, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mojo_document_document_proto_rawDescOnce sync.Once
	file_mojo_document_document_proto_rawDescData = file_mojo_document_document_proto_rawDesc
)

func file_mojo_document_document_proto_rawDescGZIP() []byte {
	file_mojo_document_document_proto_rawDescOnce.Do(func() {
		file_mojo_document_document_proto_rawDescData = protoimpl.X.CompressGZIP(file_mojo_document_document_proto_rawDescData)
	})
	return file_mojo_document_document_proto_rawDescData
}

var file_mojo_document_document_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_mojo_document_document_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_mojo_document_document_proto_goTypes = []interface{}{
	(ListAttribute_NumberStyle)(0),     // 0: mojo.document.ListAttribute.NumberStyle
	(ListAttribute_NumberDelimiter)(0), // 1: mojo.document.ListAttribute.NumberDelimiter
	(Table_Alignment)(0),               // 2: mojo.document.Table.Alignment
	(Quoted_Type)(0),                   // 3: mojo.document.Quoted.Type
	(Citation_Mode)(0),                 // 4: mojo.document.Citation.Mode
	(*Document)(nil),                   // 5: mojo.document.Document
	(*Block)(nil),                      // 6: mojo.document.Block
	(*Line)(nil),                       // 7: mojo.document.Line
	(*Plain)(nil),                      // 8: mojo.document.Plain
	(*Paragraph)(nil),                  // 9: mojo.document.Paragraph
	(*LineBlock)(nil),                  // 10: mojo.document.LineBlock
	(*CodeBlock)(nil),                  // 11: mojo.document.CodeBlock
	(*QuoteBlock)(nil),                 // 12: mojo.document.QuoteBlock
	(*ListAttribute)(nil),              // 13: mojo.document.ListAttribute
	(*OrderedList)(nil),                // 14: mojo.document.OrderedList
	(*BulletList)(nil),                 // 15: mojo.document.BulletList
	(*DefinitionList)(nil),             // 16: mojo.document.DefinitionList
	(*Header)(nil),                     // 17: mojo.document.Header
	(*Table)(nil),                      // 18: mojo.document.Table
	(*Division)(nil),                   // 19: mojo.document.Division
	(*Blocks)(nil),                     // 20: mojo.document.Blocks
	(*Inline)(nil),                     // 21: mojo.document.Inline
	(*Text)(nil),                       // 22: mojo.document.Text
	(*Emphasized)(nil),                 // 23: mojo.document.Emphasized
	(*Strong)(nil),                     // 24: mojo.document.Strong
	(*Strikeout)(nil),                  // 25: mojo.document.Strikeout
	(*Superscript)(nil),                // 26: mojo.document.Superscript
	(*Subscript)(nil),                  // 27: mojo.document.Subscript
	(*SmallCaps)(nil),                  // 28: mojo.document.SmallCaps
	(*Space)(nil),                      // 29: mojo.document.Space
	(*LineBreak)(nil),                  // 30: mojo.document.LineBreak
	(*Note)(nil),                       // 31: mojo.document.Note
	(*Quoted)(nil),                     // 32: mojo.document.Quoted
	(*Cite)(nil),                       // 33: mojo.document.Cite
	(*Citation)(nil),                   // 34: mojo.document.Citation
	(*Code)(nil),                       // 35: mojo.document.Code
	(*Link)(nil),                       // 36: mojo.document.Link
	(*Image)(nil),                      // 37: mojo.document.Image
	(*Span)(nil),                       // 38: mojo.document.Span
	(*Target)(nil),                     // 39: mojo.document.Target
	(*Inlines)(nil),                    // 40: mojo.document.Inlines
	(*MetaData)(nil),                   // 41: mojo.document.MetaData
	(*MetaValueObject)(nil),            // 42: mojo.document.MetaValueObject
	(*MetaValues)(nil),                 // 43: mojo.document.MetaValues
	(*MetaValue)(nil),                  // 44: mojo.document.MetaValue
	(*OrderedList_Blocks)(nil),         // 45: mojo.document.OrderedList.Blocks
	(*BulletList_Blocks)(nil),          // 46: mojo.document.BulletList.Blocks
	(*DefinitionList_Item)(nil),        // 47: mojo.document.DefinitionList.Item
	(*Table_Cell)(nil),                 // 48: mojo.document.Table.Cell
	(*Table_Row)(nil),                  // 49: mojo.document.Table.Row
	(*Table_Header)(nil),               // 50: mojo.document.Table.Header
	nil,                                // 51: mojo.document.MetaData.ValsEntry
	nil,                                // 52: mojo.document.MetaValueObject.ValsEntry
	(*Attribute)(nil),                  // 53: mojo.document.Attribute
	(*core.Url)(nil),                   // 54: mojo.core.Url
	(*core.DateTime)(nil),              // 55: mojo.core.DateTime
}
var file_mojo_document_document_proto_depIdxs = []int32{
	41, // 0: mojo.document.Document.meta_data:type_name -> mojo.document.MetaData
	6,  // 1: mojo.document.Document.blocks:type_name -> mojo.document.Block
	8,  // 2: mojo.document.Block.plain:type_name -> mojo.document.Plain
	9,  // 3: mojo.document.Block.paragraph:type_name -> mojo.document.Paragraph
	10, // 4: mojo.document.Block.line_block:type_name -> mojo.document.LineBlock
	11, // 5: mojo.document.Block.code_block:type_name -> mojo.document.CodeBlock
	12, // 6: mojo.document.Block.quote_block:type_name -> mojo.document.QuoteBlock
	14, // 7: mojo.document.Block.ordered_list:type_name -> mojo.document.OrderedList
	15, // 8: mojo.document.Block.bullet_list:type_name -> mojo.document.BulletList
	16, // 9: mojo.document.Block.definition_list:type_name -> mojo.document.DefinitionList
	17, // 10: mojo.document.Block.header:type_name -> mojo.document.Header
	18, // 11: mojo.document.Block.table:type_name -> mojo.document.Table
	19, // 12: mojo.document.Block.division:type_name -> mojo.document.Division
	21, // 13: mojo.document.Line.vals:type_name -> mojo.document.Inline
	21, // 14: mojo.document.Plain.inlines:type_name -> mojo.document.Inline
	21, // 15: mojo.document.Paragraph.inlines:type_name -> mojo.document.Inline
	7,  // 16: mojo.document.LineBlock.lines:type_name -> mojo.document.Line
	53, // 17: mojo.document.CodeBlock.attribute:type_name -> mojo.document.Attribute
	7,  // 18: mojo.document.CodeBlock.lines:type_name -> mojo.document.Line
	6,  // 19: mojo.document.QuoteBlock.blocks:type_name -> mojo.document.Block
	0,  // 20: mojo.document.ListAttribute.number_style:type_name -> mojo.document.ListAttribute.NumberStyle
	1,  // 21: mojo.document.ListAttribute.number_delimiter:type_name -> mojo.document.ListAttribute.NumberDelimiter
	13, // 22: mojo.document.OrderedList.attribute:type_name -> mojo.document.ListAttribute
	45, // 23: mojo.document.OrderedList.items:type_name -> mojo.document.OrderedList.Blocks
	46, // 24: mojo.document.BulletList.items:type_name -> mojo.document.BulletList.Blocks
	47, // 25: mojo.document.DefinitionList.items:type_name -> mojo.document.DefinitionList.Item
	53, // 26: mojo.document.Header.attribute:type_name -> mojo.document.Attribute
	21, // 27: mojo.document.Header.text:type_name -> mojo.document.Inline
	21, // 28: mojo.document.Table.caption:type_name -> mojo.document.Inline
	2,  // 29: mojo.document.Table.alignment:type_name -> mojo.document.Table.Alignment
	50, // 30: mojo.document.Table.header:type_name -> mojo.document.Table.Header
	49, // 31: mojo.document.Table.rows:type_name -> mojo.document.Table.Row
	53, // 32: mojo.document.Division.attribute:type_name -> mojo.document.Attribute
	6,  // 33: mojo.document.Division.content:type_name -> mojo.document.Block
	6,  // 34: mojo.document.Blocks.vals:type_name -> mojo.document.Block
	22, // 35: mojo.document.Inline.text:type_name -> mojo.document.Text
	23, // 36: mojo.document.Inline.emphasized:type_name -> mojo.document.Emphasized
	24, // 37: mojo.document.Inline.strong:type_name -> mojo.document.Strong
	25, // 38: mojo.document.Inline.strikeout:type_name -> mojo.document.Strikeout
	26, // 39: mojo.document.Inline.superscript:type_name -> mojo.document.Superscript
	27, // 40: mojo.document.Inline.subscript:type_name -> mojo.document.Subscript
	28, // 41: mojo.document.Inline.small_caps:type_name -> mojo.document.SmallCaps
	32, // 42: mojo.document.Inline.quoted:type_name -> mojo.document.Quoted
	33, // 43: mojo.document.Inline.cite:type_name -> mojo.document.Cite
	35, // 44: mojo.document.Inline.code:type_name -> mojo.document.Code
	29, // 45: mojo.document.Inline.space:type_name -> mojo.document.Space
	30, // 46: mojo.document.Inline.line_break:type_name -> mojo.document.LineBreak
	36, // 47: mojo.document.Inline.link:type_name -> mojo.document.Link
	37, // 48: mojo.document.Inline.image:type_name -> mojo.document.Image
	31, // 49: mojo.document.Inline.note:type_name -> mojo.document.Note
	38, // 50: mojo.document.Inline.span:type_name -> mojo.document.Span
	21, // 51: mojo.document.Emphasized.vals:type_name -> mojo.document.Inline
	21, // 52: mojo.document.Strong.vals:type_name -> mojo.document.Inline
	21, // 53: mojo.document.Strikeout.vals:type_name -> mojo.document.Inline
	21, // 54: mojo.document.Superscript.vals:type_name -> mojo.document.Inline
	21, // 55: mojo.document.Subscript.vals:type_name -> mojo.document.Inline
	21, // 56: mojo.document.SmallCaps.vals:type_name -> mojo.document.Inline
	6,  // 57: mojo.document.Note.vals:type_name -> mojo.document.Block
	3,  // 58: mojo.document.Quoted.type:type_name -> mojo.document.Quoted.Type
	21, // 59: mojo.document.Quoted.text:type_name -> mojo.document.Inline
	34, // 60: mojo.document.Cite.citations:type_name -> mojo.document.Citation
	21, // 61: mojo.document.Cite.inlines:type_name -> mojo.document.Inline
	21, // 62: mojo.document.Citation.prefix:type_name -> mojo.document.Inline
	21, // 63: mojo.document.Citation.suffix:type_name -> mojo.document.Inline
	4,  // 64: mojo.document.Citation.mode:type_name -> mojo.document.Citation.Mode
	53, // 65: mojo.document.Code.attribute:type_name -> mojo.document.Attribute
	53, // 66: mojo.document.Link.attribute:type_name -> mojo.document.Attribute
	21, // 67: mojo.document.Link.description:type_name -> mojo.document.Inline
	39, // 68: mojo.document.Link.target:type_name -> mojo.document.Target
	53, // 69: mojo.document.Image.attribute:type_name -> mojo.document.Attribute
	21, // 70: mojo.document.Image.description:type_name -> mojo.document.Inline
	39, // 71: mojo.document.Image.target:type_name -> mojo.document.Target
	53, // 72: mojo.document.Span.attribute:type_name -> mojo.document.Attribute
	21, // 73: mojo.document.Span.inlines:type_name -> mojo.document.Inline
	54, // 74: mojo.document.Target.url:type_name -> mojo.core.Url
	21, // 75: mojo.document.Inlines.vals:type_name -> mojo.document.Inline
	51, // 76: mojo.document.MetaData.vals:type_name -> mojo.document.MetaData.ValsEntry
	52, // 77: mojo.document.MetaValueObject.vals:type_name -> mojo.document.MetaValueObject.ValsEntry
	44, // 78: mojo.document.MetaValues.vals:type_name -> mojo.document.MetaValue
	42, // 79: mojo.document.MetaValue.meta_value_object_val:type_name -> mojo.document.MetaValueObject
	43, // 80: mojo.document.MetaValue.meta_values_val:type_name -> mojo.document.MetaValues
	55, // 81: mojo.document.MetaValue.date_time_val:type_name -> mojo.core.DateTime
	40, // 82: mojo.document.MetaValue.inlines_val:type_name -> mojo.document.Inlines
	20, // 83: mojo.document.MetaValue.blocks_val:type_name -> mojo.document.Blocks
	6,  // 84: mojo.document.OrderedList.Blocks.vals:type_name -> mojo.document.Block
	6,  // 85: mojo.document.BulletList.Blocks.vals:type_name -> mojo.document.Block
	21, // 86: mojo.document.DefinitionList.Item.term:type_name -> mojo.document.Inline
	20, // 87: mojo.document.DefinitionList.Item.definitions:type_name -> mojo.document.Blocks
	6,  // 88: mojo.document.Table.Cell.vals:type_name -> mojo.document.Block
	48, // 89: mojo.document.Table.Row.vals:type_name -> mojo.document.Table.Cell
	48, // 90: mojo.document.Table.Header.vals:type_name -> mojo.document.Table.Cell
	44, // 91: mojo.document.MetaData.ValsEntry.value:type_name -> mojo.document.MetaValue
	44, // 92: mojo.document.MetaValueObject.ValsEntry.value:type_name -> mojo.document.MetaValue
	93, // [93:93] is the sub-list for method output_type
	93, // [93:93] is the sub-list for method input_type
	93, // [93:93] is the sub-list for extension type_name
	93, // [93:93] is the sub-list for extension extendee
	0,  // [0:93] is the sub-list for field type_name
}

func init() { file_mojo_document_document_proto_init() }
func file_mojo_document_document_proto_init() {
	if File_mojo_document_document_proto != nil {
		return
	}
	file_mojo_document_attribute_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mojo_document_document_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paragraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulletList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefinitionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Division); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emphasized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strikeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Superscript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmallCaps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Space); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineBreak); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quoted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Citation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Code); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Span); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inlines); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaValueObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderedList_Blocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulletList_Blocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefinitionList_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table_Cell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table_Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_document_document_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mojo_document_document_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Block_Plain)(nil),
		(*Block_Paragraph)(nil),
		(*Block_LineBlock)(nil),
		(*Block_CodeBlock)(nil),
		(*Block_QuoteBlock)(nil),
		(*Block_OrderedList)(nil),
		(*Block_BulletList)(nil),
		(*Block_DefinitionList)(nil),
		(*Block_Header)(nil),
		(*Block_Table)(nil),
		(*Block_Division)(nil),
	}
	file_mojo_document_document_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*Inline_Text)(nil),
		(*Inline_Emphasized)(nil),
		(*Inline_Strong)(nil),
		(*Inline_Strikeout)(nil),
		(*Inline_Superscript)(nil),
		(*Inline_Subscript)(nil),
		(*Inline_SmallCaps)(nil),
		(*Inline_Quoted)(nil),
		(*Inline_Cite)(nil),
		(*Inline_Code)(nil),
		(*Inline_Space)(nil),
		(*Inline_LineBreak)(nil),
		(*Inline_Link)(nil),
		(*Inline_Image)(nil),
		(*Inline_Note)(nil),
		(*Inline_Span)(nil),
	}
	file_mojo_document_document_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*MetaValue_MetaValueObjectVal)(nil),
		(*MetaValue_MetaValuesVal)(nil),
		(*MetaValue_BoolVal)(nil),
		(*MetaValue_StringVal)(nil),
		(*MetaValue_DateTimeVal)(nil),
		(*MetaValue_InlinesVal)(nil),
		(*MetaValue_BlocksVal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mojo_document_document_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mojo_document_document_proto_goTypes,
		DependencyIndexes: file_mojo_document_document_proto_depIdxs,
		EnumInfos:         file_mojo_document_document_proto_enumTypes,
		MessageInfos:      file_mojo_document_document_proto_msgTypes,
	}.Build()
	File_mojo_document_document_proto = out.File
	file_mojo_document_document_proto_rawDesc = nil
	file_mojo_document_document_proto_goTypes = nil
	file_mojo_document_document_proto_depIdxs = nil
}
