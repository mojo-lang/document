// Code generated by mojo. DO NOT EDIT.
// Rerunning mojo will overwrite this file.
//
// Copyright 2021 Mojo-lang.org
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package document

import (
	"strconv"
)

var ListAttributeNumberStyleNames = map[int32]string{
	1: "example",
	2: "decimal",
	3: "lower-roman",
	4: "upper-roman",
	5: "lower-alpha",
	6: "upper-alpha",
}

var ListAttributeNumberStyleValues = map[string]ListAttribute_NumberStyle{
	"example":     ListAttribute_NUMBER_STYLE_EXAMPLE,
	"decimal":     ListAttribute_NUMBER_STYLE_DECIMAL,
	"lower-roman": ListAttribute_NUMBER_STYLE_LOWER_ROMAN,
	"upper-roman": ListAttribute_NUMBER_STYLE_UPPER_ROMAN,
	"lower-alpha": ListAttribute_NUMBER_STYLE_LOWER_ALPHA,
	"upper-alpha": ListAttribute_NUMBER_STYLE_UPPER_ALPHA,
}

func (x ListAttribute_NumberStyle) Format() string {
	s, ok := ListAttributeNumberStyleNames[int32(x)]
	if ok {
		return s
	}
	if int(x) == 0 {
		return "unspecified"
	}
	return strconv.Itoa(int(x))
}

func (x *ListAttribute_NumberStyle) Parse(value string) error {
	if x != nil {
		s, ok := ListAttributeNumberStyleValues[value]
		if ok {
			*x = s
		} else {
			*x = ListAttribute_NUMBER_STYLE_EXAMPLE
		}
	} else {
		*x = ListAttribute_NUMBER_STYLE_EXAMPLE
	}
	return nil
}
