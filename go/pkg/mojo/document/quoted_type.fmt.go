// Code generated by wand. DO NOT EDIT.
// Rerunning wand will overwrite this file.
//
// Copyright 2021 Mojo-lang.org
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package document

import (
	"strconv"
)

var QuotedTypeNames = map[int32]string{
	0: "double",
	1: "single",
}

var QuotedTypeValues = map[string]Quoted_Type{
	"double": Quoted_TYPE_DOUBLE,
	"single": Quoted_TYPE_SINGLE,
}

func (x Quoted_Type) Format() string {
	s, ok := QuotedTypeNames[int32(x)]
	if ok {
		return s
	}
	if int(x) == 0 {
		return "unspecified"
	}
	return strconv.Itoa(int(x))
}

func (x *Quoted_Type) Parse(value string) {
	if x != nil {
		s, ok := QuotedTypeValues[value]
		if ok {
			*x = s
		} else {
			*x = Quoted_TYPE_DOUBLE
		}
	} else {
		*x = Quoted_TYPE_DOUBLE
	}
}
